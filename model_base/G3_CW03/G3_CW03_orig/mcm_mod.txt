MODEL> MCM

ENDOG>
        q_eu      _DATA
        cwp_eu    _NOTD
        pi1_eu    _DATA
        pi4_eu    _NOTD
        is_eu     _NOTD
        il_eu     _NOTD
        rl_eu     _NOTD
        reer_eu   _NOTD
        q_ja      _DATA
        cwp_ja    _NOTD
        pi1_ja    _DATA
        pi4_ja    _NOTD
        is_ja     _NOTD
        il_ja     _NOTD
        rl_ja     _NOTD
        reer_ja   _NOTD
        q_us      _DATA
        cwp_us    _NOTD
        index_us  _NOTD
        pi1_us    _DATA
        pi4_us    _NOTD
        is_us     _NOTD
        il_us     _NOTD
        rl_us     _NOTD
        reer_us   _NOTD
        rer_euja  _NOTD
        rer_euus  _NOTD
        rer_jaus  _NOTD
        one       _DTRM
        e_d_eu    _NOTD
        e_cw_eu   _NOTD
        e_d_ja    _NOTD
        e_cw_ja   _NOTD
        e_d_us    _NOTD
        e_cw_us   _NOTD 
        

EQUATION> EQ1
EQTYPE>   IMPOSED
EQ>       q_eu =       delta1_eu*LAG(q_eu,1)
                     + delta2_eu*LAG(q_eu,2)
                     + delta3_eu*LAG(q_eu,3)
                     + delta4_eu*(  LAG(rl_eu,1)
                                  - rlbar_eu*one)
                     + delta5_eu*reer_eu
                     + sigma_e_d_eu*e_d_eu
 
EQUATION> EQ2
EQTYPE>   IMPOSED
EQ>       cwp_eu =     (f1_eu+f2_eu+f3_eu)*LEAD(pi1_eu,1)
                     + (f2_eu+f3_eu)*LEAD(pi1_eu,2)
                     + f3_eu*LEAD(pi1_eu,3) 
                     + gamma_eu*(  f0_eu*q_eu
                                 + f1_eu*LEAD(q_eu,1)
                                 + f2_eu*LEAD(q_eu,2)
                                 + f3_eu*LEAD(q_eu,3)
                                )
                     + sigma_e_cw_eu*e_cw_eu

EQUATION> EQ3
EQTYPE>   IMPOSED
EQ>       pi1_eu =   (  f0_eu*cwp_eu
                      + f1_eu*LAG(cwp_eu,1)
                      + f2_eu*LAG(cwp_eu,2)
                      + f3_eu*LAG(cwp_eu,3)
                      - (f2_eu+f3_eu)*LAG(pi1_eu,1)
                      - f3_eu*LAG(pi1_eu,2)
                     )/(f1_eu+f2_eu+f3_eu)

EQUATION> EQ4
EQTYPE>   IMPOSED
EQ>       pi4_eu =     pi1_eu
                     + LAG(pi1_eu,1)
                     + LAG(pi1_eu,2)
                     + LAG(pi1_eu,3)

EQUATION> EQ5
EQTYPE>   IMPOSED
EQ>       is_eu =      (1-rho_eu)*(  rlbar_eu*one
                                   + pi4_eu)
                     + rho_eu*LAG(is_eu,1)
                     + alpha_eu*(  pi4_eu
                                 - pitarget_eu*one)
                     + beta_eu*q_eu

EQUATION> EQ6
EQTYPE>   IMPOSED
EQ>	  il_eu =     (  is_eu 
                       + LEAD(is_eu,1)
                       + LEAD(is_eu,2)
                       + LEAD(is_eu,3)
                       + LEAD(is_eu,4)
                       + LEAD(is_eu,5)
                       + LEAD(is_eu,6)
                       + LEAD(is_eu,7)
                      )/8

EQUATION> EQ7
EQTYPE>   IMPOSED
EQ>       rl_eu =       il_eu 
                      - (  LEAD(pi1_eu,8)
                         + LEAD(pi1_eu,7)
                         + LEAD(pi1_eu,6)
                         + LEAD(pi1_eu,5)
                         + LEAD(pi1_eu,4)
                         + LEAD(pi1_eu,3)
                         + LEAD(pi1_eu,2)
                         + LEAD(pi1_eu,1)
                        )/2

EQUATION> EQ8
EQTYPE>   IMPOSED
EQ>       reer_eu =    w_euja*rer_euja
                     + w_euus*rer_euus

EQUATION> EQ9
EQTYPE>   IMPOSED
EQ>       q_ja =       delta1_ja*LAG(q_ja,1)
                     + delta2_ja*LAG(q_ja,2)
                     + delta3_ja*LAG(q_ja,3)
                     + delta4_ja*(  LAG(rl_ja,1)
                                  - rlbar_ja*one)
                     + delta5_ja*reer_ja
                     + sigma_e_d_ja*e_d_ja
 
EQUATION> EQ10
EQTYPE>   IMPOSED
EQ>       cwp_ja =     (f1_ja+f2_ja+f3_ja)*LEAD(pi1_ja,1)
                     + (f2_ja+f3_ja)*LEAD(pi1_ja,2)
                     + f3_ja*LEAD(pi1_ja,3) 
                     + gamma_ja*(  f0_ja*q_ja
                                 + f1_ja*LEAD(q_ja,1)
                                 + f2_ja*LEAD(q_ja,2)
                                 + f3_ja*LEAD(q_ja,3)
                                )
                     + sigma_e_cw_ja*e_cw_ja

EQUATION> EQ11
EQTYPE>   IMPOSED
EQ>       pi1_ja =   (  f0_ja*cwp_ja
                      + f1_ja*LAG(cwp_ja,1)
                      + f2_ja*LAG(cwp_ja,2)
                      + f3_ja*LAG(cwp_ja,3)
                      - (f2_ja+f3_ja)*LAG(pi1_ja,1)
                      - f3_ja*LAG(pi1_ja,2)
                     )/(f1_ja+f2_ja+f3_ja)

EQUATION> EQ12
EQTYPE>   IMPOSED
EQ>       pi4_ja =     pi1_ja
                     + LAG(pi1_ja,1)
                     + LAG(pi1_ja,2)
                     + LAG(pi1_ja,3)

EQUATION> EQ13
EQTYPE>   IMPOSED
EQ>       is_ja =       (1-rho_ja)*(  rlbar_ja*one
                                    + pi4_ja)
                      + rho_ja*LAG(is_ja,1)
                      + alpha_ja*(  pi4_ja
                                  - pitarget_ja*one)
                      + beta_ja*q_ja

EQUATION> EQ14
EQTYPE>   IMPOSED
EQ>	  il_ja =      (  is_ja 
                        + LEAD(is_ja,1)
                        + LEAD(is_ja,2)
                        + LEAD(is_ja,3)
                        + LEAD(is_ja,4)
                        + LEAD(is_ja,5)
                        + LEAD(is_ja,6)
                        + LEAD(is_ja,7)
                        + LEAD(is_ja,8)
                        + LEAD(is_ja,9)
                        + LEAD(is_ja,10)
                        + LEAD(is_ja,11)
                       )/12

EQUATION> EQ15
EQTYPE>   IMPOSED
EQ>       rl_ja =       il_ja 
                      - (  LEAD(pi1_ja,12)
                         + LEAD(pi1_ja,11)
                         + LEAD(pi1_ja,10)
                         + LEAD(pi1_ja,9)
                         + LEAD(pi1_ja,8)
                         + LEAD(pi1_ja,7)
                         + LEAD(pi1_ja,6)
                         + LEAD(pi1_ja,5)
                         + LEAD(pi1_ja,4)
                         + LEAD(pi1_ja,3)
                         + LEAD(pi1_ja,2)
                         + LEAD(pi1_ja,1)
                        )/3

EQUATION> EQ16
EQTYPE>   IMPOSED
EQ>       reer_ja =  - w_jaeu*rer_euja
                     + w_jaus*rer_jaus

EQUATION> EQ17
EQTYPE>   IMPOSED
EQ>       q_us =       delta1_us*LAG(q_us,1)
                     + delta2_us*LAG(q_us,2)
                     + delta3_us*LAG(q_us,3)
                     + delta4_us*(  LAG(rl_us,1)
                                  - rlbar_us*one)
                     + delta5_us*reer_us
                     + sigma_e_d_us*e_d_us

EQUATION> EQ18
EQTYPE>   IMPOSED
EQ>       cwp_us =     f0_us*index_us
                     + f1_us*LEAD(index_us,1)
                     + f2_us*LEAD(index_us,2)
                     + f3_us*LEAD(index_us,3) 
                     + gamma_us*(  f0_us*q_us
                                 + f1_us*LEAD(q_us,1)
                                 + f2_us*LEAD(q_us,2)
                                 + f3_us*LEAD(q_us,3) 
                                )
                     + sigma_e_cw_us*e_cw_us

EQUATION> EQ19
EQTYPE>   IMPOSED
EQ>       index_us =   f0_us*cwp_us
                     + f1_us*LAG(cwp_us,1)
                     + f2_us*LAG(cwp_us,2)
                     + f3_us*LAG(cwp_us,3)

EQUATION> EQ20
EQTYPE>   IMPOSED
EQ>       pi1_us =   (  f0_us*cwp_us
                      + f1_us*LAG(cwp_us,1)
                      + f2_us*LAG(cwp_us,2)
                      + f3_us*LAG(cwp_us,3)
                      - (f2_us+f3_us)*LAG(pi1_us,1)
                      - f3_us*LAG(pi1_us,2)
                     )/(f1_us+f2_us+f3_us)

EQUATION> EQ21
EQTYPE>   IMPOSED
EQ>       pi4_us =     pi1_us
                     + LAG(pi1_us,1)
                     + LAG(pi1_us,2)
                     + LAG(pi1_us,3)

EQUATION> EQ22
EQTYPE>   IMPOSED
EQ>       is_us =       (1-rho_us)*(  rlbar_us*one
                                    + pi4_us)
                      + rho_us*LAG(is_us,1)
                      + alpha_us*(  pi4_us
                                  - pitarget_us*one)
                      + beta_us*q_us

EQUATION> EQ23
EQTYPE>   IMPOSED
EQ>	  il_us =      (  is_us 
                        + LEAD(is_us,1)
                        + LEAD(is_us,2)
                        + LEAD(is_us,3)
                        + LEAD(is_us,4)
                        + LEAD(is_us,5)
                        + LEAD(is_us,6)
                        + LEAD(is_us,7)
                       )/8

EQUATION> EQ24
EQTYPE>   IMPOSED
EQ>       rl_us =       il_us 
                      - (  LEAD(pi1_us,8)
                         + LEAD(pi1_us,7)
                         + LEAD(pi1_us,6)
                         + LEAD(pi1_us,5)
                         + LEAD(pi1_us,4)
                         + LEAD(pi1_us,3)
                         + LEAD(pi1_us,2)
                         + LEAD(pi1_us,1)
                        )/2

EQUATION> EQ25
EQTYPE>   IMPOSED
EQ>       reer_us =  - w_useu*rer_euus
                     - w_usja*rer_jaus

EQUATION> EQ26
EQTYPE>   IMPOSED
EQ>       rer_euja =   LEAD(rer_euja,1) 
                     + 4*LEAD(pi1_eu,1)
                     - 4*LEAD(pi1_ja,1)
                     - is_eu
                     + is_ja

EQUATION> EQ27
EQTYPE>   IMPOSED
EQ>       rer_euus =   LEAD(rer_euus,1) 
                     + 4*LEAD(pi1_eu,1)
                     - 4*LEAD(pi1_us,1)
                     - is_eu
                     + is_us
 
EQUATION> EQ28
EQTYPE>   IMPOSED
EQ>       rer_jaus = rer_euus-rer_euja 

EQUATION> EQ29
EQTYPE>   IMPOSED
EQ>       one =      LAG(one,1)

EQUATION> EQ30
EQTYPE>   STOCH
EQ>       e_d_eu =   0*one

EQUATION> EQ31
EQTYPE>   STOCH
EQ>       e_cw_eu =  0*one

EQUATION> EQ32
EQTYPE>   STOCH
EQ>       e_d_ja =   0*one

EQUATION> EQ33
EQTYPE>   STOCH
EQ>       e_cw_ja =  0*one

EQUATION> EQ34
EQTYPE>   STOCH
EQ>       e_d_us =   0*one

EQUATION> EQ35
EQTYPE>   STOCH
EQ>       e_cw_us =  0*one

END

